MEMORY
{
ZP    : start = $0000, size = $0100, type = rw, file = "";
OAM   : start = $0200, size = $0100, type = rw, file = "";
BSS   : start = $0300, size = $0500, type = rw, file = "";


HEADER: start = $0000, size = $0010, fill = yes, file = %O;

PRG00 : start = $0000, size = $2000, fill = yes, file = %O;
PRG01 : start = $0000, size = $2000, fill = yes, file = %O;
PRG02 : start = $0000, size = $2000, fill = yes, file = %O;
PRG03 : start = $0000, size = $2000, fill = yes, file = %O;
PRG04 : start = $0000, size = $2000, fill = yes, file = %O;
PRG05 : start = $0000, size = $2000, fill = yes, file = %O;
PRG06 : start = $0000, size = $2000, fill = yes, file = %O;
PRG07 : start = $0000, size = $2000, fill = yes, file = %O;
PRG08 : start = $0000, size = $2000, fill = yes, file = %O;
PRG09 : start = $0000, size = $2000, fill = yes, file = %O;
PRG0A : start = $0000, size = $2000, fill = yes, file = %O;
PRG0B : start = $0000, size = $2000, fill = yes, file = %O;
PRG0C : start = $0000, size = $2000, fill = yes, file = %O;
PRG0D : start = $0000, size = $2000, fill = yes, file = %O;
PRG0E : start = $C000, size = $2000, fill = yes, file = %O;
PRG0F : start = $E000, size = $2000, fill = yes, file = %O;
PRG10 : start = $0000, size = $2000, fill = yes, file = %O;

CHR00 : start = $0000, size = $2000, fill = yes, file = %O;
CHR01 : start = $0000, size = $2000, fill = yes, file = %O;
CHR02 : start = $0000, size = $2000, fill = yes, file = %O;
CHR03 : start = $0000, size = $2000, fill = yes, file = %O;
}

SEGMENTS
{
ZP     : load = ZP,   type = zp;
OAM    : load = OAM,  type = bss, align = $100;
BSS    : load = BSS,  type = bss;

HEADER : load = HEADER;
PRG00  : load = PRG00, type = ro ;
PRG01  : load = PRG01, type = ro ;
PRG02  : load = PRG02, type = ro ;
PRG03  : load = PRG03, type = ro ;
PRG04  : load = PRG04, type = ro ;
PRG05  : load = PRG05, type = ro ;
PRG06  : load = PRG06, type = ro ;
PRG07  : load = PRG07, type = ro ;
PRG08  : load = PRG08, type = ro ;
PRG09  : load = PRG09, type = ro ;
PRG0A  : load = PRG0A, type = ro ;
PRG0B  : load = PRG0B, type = ro ;
PRG0C  : load = PRG0C, type = ro ;
PRG0D  : load = PRG0D, type = ro ;
PRG0E  : load = PRG0E, type = ro ;
PRG0F  : load = PRG0F, type = ro ;
PRG10  : load = PRG10, type = ro ;

VECTORS: load = PRG00 , type = ro ;
CHR00  : load = CHR00, type = ro ;
CHR01  : load = CHR01, type = ro ;
CHR02  : load = CHR02, type = ro ;
CHR03  : load = CHR03, type = ro ;
}
