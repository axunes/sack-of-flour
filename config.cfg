MEMORY
{
ZP    : start = $0000, size = $0100, type = rw, file = "";
OAM   : start = $0200, size = $0100, type = rw, file = "";
BSS   : start = $0300, size = $0500, type = rw, file = "";


HEADER: start = $0000, size = $0010, fill = yes, file = %O;

PRG0 : start = $8000, size = $2000, fill = yes, file = %O;
PRG1 : start = $0000, size = $2000, fill = yes, file = %O;
PRG2 : start = $0000, size = $2000, fill = yes, file = %O;
PRG3 : start = $0000, size = $2000, fill = yes, file = %O;
PRG4 : start = $0000, size = $2000, fill = yes, file = %O;
PRG5 : start = $0000, size = $2000, fill = yes, file = %O;
PRG6 : start = $0000, size = $2000, fill = yes, file = %O;
PRG7 : start = $0000, size = $2000, fill = yes, file = %O;
PRG8 : start = $0000, size = $2000, fill = yes, file = %O;
PRG9 : start = $0000, size = $2000, fill = yes, file = %O;
PRGA : start = $0000, size = $2000, fill = yes, file = %O;
PRGB : start = $0000, size = $2000, fill = yes, file = %O;
PRGC : start = $0000, size = $2000, fill = yes, file = %O;
PRGD : start = $0000, size = $2000, fill = yes, file = %O;
PRGE : start = $C000, size = $2000, fill = yes, file = %O;
PRGF : start = $E000, size = $2000, fill = yes, file = %O;

CHR0 : start = $0000, size = $2000, fill = yes, file = %O;
CHR1 : start = $0000, size = $2000, fill = yes, file = %O;
CHR2 : start = $0000, size = $2000, fill = yes, file = %O;
CHR3 : start = $0000, size = $2000, fill = yes, file = %O;
}

SEGMENTS
{
ZP     : load = ZP,   type = zp;
OAM    : load = OAM,  type = bss, align = $100;
BSS    : load = BSS,  type = bss;

HEADER : load = HEADER;
PRG0  : load = PRG0, type = ro ;
PRG1  : load = PRG1, type = ro ;
PRG2  : load = PRG2, type = ro ;
PRG3  : load = PRG3, type = ro ;
PRG4  : load = PRG4, type = ro ;
PRG5  : load = PRG5, type = ro ;
PRG6  : load = PRG6, type = ro ;
PRG7  : load = PRG7, type = ro ;
PRG8  : load = PRG8, type = ro ;
PRG9  : load = PRG9, type = ro ;
PRGA  : load = PRGA, type = ro ;
PRGB  : load = PRGB, type = ro ;
PRGC  : load = PRGC, type = ro ;
PRGD  : load = PRGD, type = ro ;
PRGE  : load = PRGE, type = ro ;
PRGF  : load = PRGF, type = ro ;
VECTORS: load = PRGF, type = ro, start = $FFFA ;

CHR0  : load = CHR0, type = ro ;
CHR1  : load = CHR1, type = ro ;
CHR2  : load = CHR2, type = ro ;
CHR3  : load = CHR3, type = ro ;
}
